#+TITLE: Naming Things: Items


  Naming things is important. At the most abstract, this system is about =items= and =labels=. To become more concrete, we will define specific =items= (like 'hrefs' and 'bookmarks' and 'tweets' and 'files') and their properties. 

** Items

   > An item is something that may be identified.

#+BEGIN_SRC clojure :tangle src/hyperlexia/item.cljs

  (ns hyperlexia.item
    (:require [cljs.spec :as s]
              [cljs.test :refer [testing is]])
    (:require-macros [devcards.core :as dc :refer [deftest]]))

  ;; Identifiable
  (defprotocol Identifiable (id [x] "Return a context-appropriate unique identifier."))

  (s/def ::item (s/or :has-key (s/keys :req-un [::id]) :has-fn #(satisfies? Identifiable %)))

#+END_SRC

Mostly I figure that datoms will get =id= fields as they get transformed into our system. But maybe it will make sense to give some of them an =id= function in the future. 

*** Pins

    Let's get more specific.

    Our first instance of such an item is 'the bookmark.' My first observation is that every bookmark storage solution I've seen always looks kludgy, or else is susceptible to the "check your data in, never check your data out" problem. For a while I collected instances of people complaining about their unhappiness with bookmarking, some of which may be found here:

    - https://pinboard.in/search/u:mathpunk?query=anansi-ux
    - https://pinboard.in/search/u:mathpunk?query=anansi

    My second observation is, why are they called bookmarks?, when they do not generally represent a marker of progress through a book, nor do they tend to mean markers of passages within a book. 

    So anyway 'bookmark' is a lousy name. Looking about for a suitable replacement, I notice that the word *'pin'*, and the icon for a pushpin, has come to mean something like my use case. I want to 'put a pin in' some clipping or notion for later. I may even have a concept of what space of notional 'wall' or 'board' I would pin it in, to come across later. 

    Since this pinning notion works for moodboards, for agenda items, & for the many users of Pinterest and Pinboard, I'm grabbing the word and defining it to mean: it's a thing with an Internet web page link as one of its attributes. 

#+BEGIN_SRC clojure :tangle src/hyperlexia/item.cljs

  (s/def ::href (s/and string? #(re-matches #"https?://.*" %)))
  (s/def ::pin (s/keys :req [::href]))

#+END_SRC

Note: I spent some time worrying over the fact that a string like "file:///home/person/some-data/data.txt" represents a resource, too, but one that's on a local machine. Thing is, I'm not clear on URIs vs URLs vs Resources vs Files vs Blockdevices vs Bittorrents vs ??? so, I'm assuming we care about stuff that's reachable via web browser and I'll worry about where they are later.


** Labels

Labels, Keywords, Terms, Topics: What it is to be a label
---------------------------------------------------------

It is our prerogative to label items however we wish with as many labels as we wish.

- keywords :: words that have descriptive meaning for us
- terms :: synonym of keywords; to remind us that we permit space-separated keywords
- tags :: another synonym
- topics :: not quite a synonym, being a set (possibly singleton) from the keywords
- decorations :: a label that you cannot describe in language. A song, an image, any other way of meaning. Please provide a uri that we might use the resource when displaying a decorated item. 


Tags are a set of terms, or a comma-separated string of terms. Something that is tagged, it has a nonblank string or nonempty set of terms.

#+BEGIN_SRC clojure

  (s/def ::tags (s/or :string string? :set set?))
  (s/def ::tagged (s/and (s/keys :req [::tags])
                         #(apply (complement empty?) [(:tags %)])))

#+END_SRC

